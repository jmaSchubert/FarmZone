plugins {
    id 'java'
}

group = 'org.Vertyx'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    implementation "net.kyori:adventure-api:4.17.0"
    compileOnly("io.papermc.paper:paper-api:1.21.1-R0.1-SNAPSHOT")
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

def serverDirectory = file("D:\\John\\Documents\\Programmierung\\PaperMC\\MinecraftDevelopmentServer\\Paper1.21.1\\plugins")

tasks.jar {
    manifest {
        attributes["paperweight-mappings-namespace"] = "mojang"
    }
}

// Task to build the plugin
tasks.register('buildPlugin', Jar) {
    dependsOn 'build'
    from sourceSets.main.output
    archiveBaseName.set("FarmingZone") // Set your plugin name here
}

// Task to copy the built JAR to server directory
tasks.register('deployToServer') {
    dependsOn 'buildPlugin'
    doLast {
        copy {
            from tasks.buildPlugin.archiveFile
            into serverDirectory
        }
        println "Plugin deployed to server plugins folder!"
    }
}

// Task to restart the server
tasks.register('restartServer') {
    dependsOn 'deployToServer'
    doLast {
        println "Restarting the server..."
        exec {
            workingDir "D:/John/Documents/Programmierung/PaperMC/MinecraftDevelopmentServer/Paper1.21.1"
            commandLine 'cmd', '/c', 'start', 'cmd.exe', '/K', 'start.bat'

        }
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('paper-plugin.yml') {
        expand props
    }
}
